{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/screenshot.png","path":"images/screenshot.png","modified":0,"renderable":0},{"_id":"themes/matery/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/matery/source/favicon1.png","path":"favicon1.png","modified":0,"renderable":1},{"_id":"themes/matery/source/css/gitment.css","path":"css/gitment.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/matery.css","path":"css/matery.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my-gitalk.css","path":"css/my-gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/css/my.css","path":"css/my.css","modified":0,"renderable":1},{"_id":"themes/matery/source/js/matery.js","path":"js/matery.js","modified":0,"renderable":1},{"_id":"themes/matery/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatar.jpg","path":"medias/avatar.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/avatar1.jpg","path":"medias/avatar1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/logo.png","path":"medias/logo.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/logo1.png","path":"medias/logo1.png","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/cover.jpg","path":"medias/cover.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/13.jpg","path":"medias/featureimages/13.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/15.jpg","path":"medias/featureimages/15.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/16.jpg","path":"medias/featureimages/16.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/2.jpg","path":"medias/featureimages/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/21.jpg","path":"medias/featureimages/21.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/22.jpg","path":"medias/featureimages/22.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/23.jpg","path":"medias/featureimages/23.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/5.jpg","path":"medias/featureimages/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/8.jpg","path":"medias/featureimages/8.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/7.jpg","path":"medias/featureimages/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/alipay.jpg","path":"medias/reward/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/animate/animate.min.css","path":"libs/animate/animate.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.css","path":"libs/aos/aos.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/aos/aos.js","path":"libs/aos/aos.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","path":"libs/gitalk/gitalk.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","path":"libs/gitment/gitment-default.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","path":"libs/jqcloud/jqcloud-1.0.4.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","path":"libs/jqcloud/jqcloud.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","path":"libs/masonry/masonry.pkgd.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","path":"libs/scrollprogress/scrollProgress.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","path":"libs/tocbot/tocbot.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","path":"libs/tocbot/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/0.jpg","path":"medias/featureimages/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/1.jpg","path":"medias/featureimages/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/10.jpg","path":"medias/featureimages/10.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/11.jpg","path":"medias/featureimages/11.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/12.jpg","path":"medias/featureimages/12.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/14.jpg","path":"medias/featureimages/14.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/17.jpg","path":"medias/featureimages/17.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/18.jpg","path":"medias/featureimages/18.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/19.jpg","path":"medias/featureimages/19.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/20.jpg","path":"medias/featureimages/20.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/3.jpg","path":"medias/featureimages/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/4.jpg","path":"medias/featureimages/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/6.jpg","path":"medias/featureimages/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/featureimages/9.jpg","path":"medias/featureimages/9.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/reward/wechat.png","path":"medias/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitment/gitment.js","path":"libs/gitment/gitment.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","path":"libs/jquery/jquery-2.2.0.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/5.jpg","path":"medias/banner/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","path":"libs/awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","path":"libs/gitalk/gitalk.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","path":"libs/lightGallery/css/lightgallery.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","path":"libs/lightGallery/fonts/lg.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","path":"libs/lightGallery/fonts/lg.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","path":"libs/lightGallery/fonts/lg.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","path":"libs/lightGallery/fonts/lg.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","path":"libs/lightGallery/img/loading.gif","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","path":"libs/lightGallery/img/video-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","path":"libs/lightGallery/img/vimeo-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","path":"libs/lightGallery/img/youtube-play.png","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","path":"libs/lightGallery/js/lightgallery-all.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/css/share.min.css","path":"libs/share/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","path":"libs/share/fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","path":"libs/share/fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","path":"libs/share/fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","path":"libs/share/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","path":"libs/share/js/jquery.share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","path":"libs/share/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/2.jpg","path":"medias/banner/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/3.jpg","path":"medias/banner/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/old/0.jpg","path":"medias/banner/old/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/old/2.jpg","path":"medias/banner/old/2.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","path":"libs/awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","path":"libs/awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/js/materialize.min.js","path":"libs/materialize/js/materialize.min.js","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/4.jpg","path":"medias/banner/4.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/old/1.jpg","path":"medias/banner/old/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/old/3.jpg","path":"medias/banner/old/3.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/old/5.jpg","path":"medias/banner/old/5.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/old/6.jpg","path":"medias/banner/old/6.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","path":"libs/awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","path":"libs/awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","path":"libs/awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/css/materialize.min.css","path":"libs/materialize/css/materialize.min.css","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/LICENSE.txt","path":"libs/materialize/font/material-design-icons/LICENSE.txt","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff2","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.eot","path":"libs/materialize/font/roboto/Roboto-Bold.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff","path":"libs/materialize/font/roboto/Roboto-Bold.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff2","path":"libs/materialize/font/roboto/Roboto-Bold.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.eot","path":"libs/materialize/font/roboto/Roboto-Light.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.eot","path":"libs/materialize/font/roboto/Roboto-Medium.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff2","path":"libs/materialize/font/roboto/Roboto-Light.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff","path":"libs/materialize/font/roboto/Roboto-Light.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff","path":"libs/materialize/font/roboto/Roboto-Medium.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.eot","path":"libs/materialize/font/roboto/Roboto-Regular.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff2","path":"libs/materialize/font/roboto/Roboto-Medium.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff","path":"libs/materialize/font/roboto/Roboto-Regular.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff2","path":"libs/materialize/font/roboto/Roboto-Regular.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.eot","path":"libs/materialize/font/roboto/Roboto-Thin.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff","path":"libs/materialize/font/roboto/Roboto-Thin.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff2","path":"libs/materialize/font/roboto/Roboto-Thin.woff2","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/0.jpg","path":"medias/banner/0.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/1.jpg","path":"medias/banner/1.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.eot","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.eot","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.ttf","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.woff","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.ttf","path":"libs/materialize/font/roboto/Roboto-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.ttf","path":"libs/materialize/font/roboto/Roboto-Light.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.ttf","path":"libs/materialize/font/roboto/Roboto-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.ttf","path":"libs/materialize/font/roboto/Roboto-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.ttf","path":"libs/materialize/font/roboto/Roboto-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/matery/source/medias/banner/old/7.jpg","path":"medias/banner/old/7.jpg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","path":"libs/awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.svg","path":"libs/materialize/font/material-design-icons/Material-Design-Icons.svg","modified":0,"renderable":1},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","path":"libs/echarts/echarts.min.js","modified":0,"renderable":1},{"_id":"source/images/bg/docker.png","path":"images/bg/docker.png","modified":1,"renderable":0}],"Cache":[{"_id":"source/404.html","hash":"b74e38e322d86183d8865cd8dce465058e879e9c","modified":1542182634886},{"_id":"themes/matery/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1542208548365},{"_id":"themes/matery/README.md","hash":"5ebffb514f7f8847a634ad333593700e82b7f675","modified":1542208548366},{"_id":"themes/matery/README_CN.md","hash":"31bcf12081b85e6082e5479463382864a888665f","modified":1542208548366},{"_id":"themes/matery/_config.yml","hash":"4af7da3dfef851b7eb1f6cc3c309421de48f45bc","modified":1542336024376},{"_id":"source/_posts/hello--world.md","hash":"fdc07aae0bf17b03a9b9562916bbc3762ca9fa6e","modified":1542336786825},{"_id":"source/_posts/hello-world.md","hash":"f90b0586b2c4987cb2026ecb1d15ccaf4e684fdd","modified":1542336786829},{"_id":"source/_posts/hello__world.md","hash":"4c464a833522ebde54365ad24e32023df5befa6e","modified":1542336786832},{"_id":"source/_posts/hello_world.md","hash":"ede00df4fbc217e2f5f5c671185312c9a39b3d7c","modified":1542336786834},{"_id":"source/_posts/helloworld.md","hash":"cae367d0f16d6ce0f043581380e32ca594c1103a","modified":1542336786836},{"_id":"source/about/index-1.md","hash":"d85bea190d317eb0d7171097ccec3e2006ce665f","modified":1542295307243},{"_id":"source/about/index.md","hash":"27716ad12695774908760b4b4efa667654c1f754","modified":1542295342495},{"_id":"source/categories/index.md","hash":"b0626f6c32790d70bb1909bb945d2eb418d467c3","modified":1542272796015},{"_id":"source/images/screenshot.png","hash":"8b3a9be7ab7f37e8faf512e6b91ef58334321748","modified":1542334844000},{"_id":"source/tags/index.md","hash":"9897e22b3e10cb380eacc82eed0f1267b00ea810","modified":1542294942975},{"_id":"source/test/index.md","hash":"09290198118ac13a5101060177d2e0a38a29e2d5","modified":1542163307920},{"_id":"themes/matery/.git/HEAD","hash":"dd8e8826088c2a83b5ebe1e83fa0aa5f0ed56f98","modified":1542208548359},{"_id":"themes/matery/.git/config","hash":"4b8791779afce68a3d615f801db71229800b96a7","modified":1542208548361},{"_id":"themes/matery/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1542208484150},{"_id":"themes/matery/.git/index","hash":"dadc5c1dcdaef4edda7770b3dee1c9da67a1840a","modified":1542296526057},{"_id":"themes/matery/.git/packed-refs","hash":"448a7273dab2e666b9cc816edf61c95baf3990ed","modified":1542208548357},{"_id":"themes/matery/layout/about.ejs","hash":"ee639d0310867976b3e5fb9f92c215a17a433703","modified":1542208548372},{"_id":"themes/matery/layout/archive.ejs","hash":"033fda56f64099f5be0d70fa47b7c4bba64f30c8","modified":1542208548372},{"_id":"themes/matery/layout/categories.ejs","hash":"8e54665cc25d7c333da7d9f312987190be6215da","modified":1542208548373},{"_id":"themes/matery/layout/category.ejs","hash":"a0cca484d34868cf1749531eb532ab688c9d3e9d","modified":1542208548373},{"_id":"themes/matery/layout/index.ejs","hash":"a62b0bca4341a672f369e90c6f2855bdcbbb8938","modified":1542208548373},{"_id":"themes/matery/layout/layout.ejs","hash":"c8bcca2235972004e07f0a5366e3b12879730ecd","modified":1542208548373},{"_id":"themes/matery/layout/post.ejs","hash":"dc28ffee179c6fc90de0b70d35be65752b94a493","modified":1542208548374},{"_id":"themes/matery/layout/tag.ejs","hash":"ad1cc11ac2b99bd803276b28ae57340cdd5810c8","modified":1542208548374},{"_id":"themes/matery/layout/tags.ejs","hash":"cf9517aa6a0111355121f44615d6923e312283c7","modified":1542208548374},{"_id":"themes/matery/languages/default.yml","hash":"7b4fde04c40bcd08ef91ab847b1c8757f0e9be0a","modified":1542208548366},{"_id":"themes/matery/languages/zh-CN.yml","hash":"ae6aef8de1ab3bbf13296635a68ae917b615336c","modified":1542208548366},{"_id":"themes/matery/source/favicon.png","hash":"6d754c25ed3f4ed3808995e48ab3fbd99777694f","modified":1542267645000},{"_id":"themes/matery/source/favicon1.png","hash":"20674c497b75fc889194b47fd18ecea12303d8ec","modified":1542208548376},{"_id":"themes/matery/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1542208484151},{"_id":"themes/matery/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1542208484150},{"_id":"themes/matery/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1542208484152},{"_id":"themes/matery/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1542208484152},{"_id":"themes/matery/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1542208484151},{"_id":"themes/matery/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1542208484151},{"_id":"themes/matery/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1542208484153},{"_id":"themes/matery/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1542208484151},{"_id":"themes/matery/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1542208484151},{"_id":"themes/matery/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1542208484153},{"_id":"themes/matery/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1542208484150},{"_id":"themes/matery/.git/logs/HEAD","hash":"dc1bedbbfe292f45b710d1f895153035af2ee4fd","modified":1542208548360},{"_id":"themes/matery/layout/_partial/back-top.ejs","hash":"8c91d2088c9bb323246b054d4940bde6cead6828","modified":1542208548367},{"_id":"themes/matery/layout/_partial/disqus.ejs","hash":"a0f53d1a9b579d52e52ccad8c6e330bf3b89547e","modified":1542208548367},{"_id":"themes/matery/layout/_partial/bg-cover.ejs","hash":"0b702e5d6fc21bb4422ec0b2cfbc66869acfadf8","modified":1542271420361},{"_id":"themes/matery/layout/_partial/footer.ejs","hash":"5102331ea92951197fcbe0f380f607a2102d90e6","modified":1542265306150},{"_id":"themes/matery/layout/_partial/gitalk.ejs","hash":"22dc3a113315cd77d16b7f4c5b16a207f6aee5ff","modified":1542208548367},{"_id":"themes/matery/layout/_partial/github-link.ejs","hash":"3aeb581bd78ab8e15b858e4c44c03bcf92f20b9e","modified":1542208548367},{"_id":"themes/matery/layout/_partial/gitment.ejs","hash":"0abfb51dc80ad063fb2118bee28de6bb8d99ed4e","modified":1542208548368},{"_id":"themes/matery/layout/_partial/head.ejs","hash":"64f0dc97d55afa74f73507d6ced4c0358721a7a6","modified":1542208548368},{"_id":"themes/matery/layout/_partial/header.ejs","hash":"3956916f8fff21e619619c0c518bd05be39a2f4f","modified":1542208548368},{"_id":"themes/matery/layout/_partial/livere.ejs","hash":"9c3401b42ea7f26410a5593bae93ada7e57b43be","modified":1542208548368},{"_id":"themes/matery/layout/_partial/mobile-nav.ejs","hash":"8dac7c8c308dac98900371d3880e381d54209ed0","modified":1542208548368},{"_id":"themes/matery/layout/_partial/navigation.ejs","hash":"be79983dff65ec61e842c160af454e390936126b","modified":1542208548368},{"_id":"themes/matery/layout/_partial/paging.ejs","hash":"68a24cad2b2049c4dc3a250aa30bf4256f9e50cb","modified":1542208548368},{"_id":"themes/matery/layout/_partial/post-cover.ejs","hash":"202dfebd4ce1e2e647e0fcbf275b30820d16507c","modified":1542208548369},{"_id":"themes/matery/layout/_partial/post-detail-toc.ejs","hash":"cc10fe573b3b81267ace39ccce6d3afe946d5947","modified":1542208548369},{"_id":"themes/matery/layout/_partial/post-detail.ejs","hash":"64f7ee5c372c6d59dc49a433db0cca21af5bdb42","modified":1542208548369},{"_id":"themes/matery/layout/_partial/post-statis.ejs","hash":"2b2fe8e8e94e65c52a4dbd454168e9b9df6baf10","modified":1542208548369},{"_id":"themes/matery/layout/_partial/prev-next.ejs","hash":"a497e8826fd96fd99441a4a0ead19717f76f03f6","modified":1542208548369},{"_id":"themes/matery/layout/_partial/reward.ejs","hash":"d545c74f26ec321ba7e942d469f354eadd57e407","modified":1542208548370},{"_id":"themes/matery/layout/_partial/search.ejs","hash":"db3b722ddd4cc948f1b5962154ea0be0072ba211","modified":1542208548370},{"_id":"themes/matery/layout/_partial/share.ejs","hash":"34f8e4250bb66012026aa50686a7c89a0414ca1b","modified":1542208548370},{"_id":"themes/matery/layout/_partial/social-link.ejs","hash":"d646c90a32087c85b6bda057603b0fe99797291f","modified":1542252049826},{"_id":"themes/matery/layout/_widget/category-cloud.ejs","hash":"61c6e0fad7a5635cd5815bcf357fb793c22d10dc","modified":1542208548370},{"_id":"themes/matery/layout/_widget/category-radar.ejs","hash":"e4e8cd820674b84ac5492901f43ec4ebcfe7ceac","modified":1542208548370},{"_id":"themes/matery/layout/_widget/my-gallery.ejs","hash":"526db2a2b2ba61583c3813510cf47c66707bf92c","modified":1542208548371},{"_id":"themes/matery/layout/_widget/my-skills.ejs","hash":"10b6a0b2b59cc7f12e5e1f718fb4e3a0307a6ff6","modified":1542208548371},{"_id":"themes/matery/layout/_widget/my-projects.ejs","hash":"77a85f8d6f3a173a6430f25c2ea7ee4b72aed821","modified":1542208548371},{"_id":"themes/matery/layout/_widget/post-calendar.ejs","hash":"3722258ffe5ba64dabd0c374789d1747c4296ca5","modified":1542208548371},{"_id":"themes/matery/layout/_widget/post-charts.ejs","hash":"0276ba04a0cbe39871fed5aa1d8d82e3d9c9c4eb","modified":1542208548371},{"_id":"themes/matery/layout/_widget/recommend.ejs","hash":"a6aa016a71df28aa9449a2f2e27ec3dcdb0aa3eb","modified":1542208548372},{"_id":"themes/matery/layout/_widget/tag-cloud.ejs","hash":"636ec3aa7920e7cb09f6898b463b5cc06489269e","modified":1542208548372},{"_id":"themes/matery/layout/_widget/tag-wordcloud.ejs","hash":"265a620ddafb31b26a64bf4c31b1e27af9d81f9c","modified":1542208548372},{"_id":"themes/matery/source/css/gitment.css","hash":"2bd15cc17dca35ac3ecc0acf167a23a1dd362acd","modified":1542208548374},{"_id":"themes/matery/source/css/matery.css","hash":"d8e9cc7d965df517bb09f9bc44d8cff0b331f370","modified":1542208548375},{"_id":"themes/matery/source/css/my-gitalk.css","hash":"eeda46a83d0db1cc239a9cd27d544faf663f9883","modified":1542208548375},{"_id":"themes/matery/source/css/my.css","hash":"497e50351f7838f8546cac76850a42e7e380a110","modified":1542208548375},{"_id":"themes/matery/source/js/matery.js","hash":"72e2a16456cea15e0eaa3e62a46bafdc6711db41","modified":1542208548376},{"_id":"themes/matery/source/js/search.js","hash":"499e11786efbb04815b54a1de317cc8606a37555","modified":1542208548376},{"_id":"themes/matery/source/medias/avatar.jpg","hash":"796ce2541777c98075593992395233b66d472e85","modified":1542295615000},{"_id":"themes/matery/source/medias/avatar1.jpg","hash":"b7f8ca0c682f95d93f002c845aafbcb508ec2b0f","modified":1542208548430},{"_id":"themes/matery/source/medias/logo.png","hash":"069e71f36c59c512cc70471f5f259cf06b2b4b8b","modified":1542270387156},{"_id":"themes/matery/source/medias/logo1.png","hash":"4050259723bd418648ec40028a8020364e57a6a3","modified":1542208548449},{"_id":"themes/matery/.git/objects/17/545ebfc20ee921dda770a6512c73de25f8b593","hash":"2e1fe2af30005bebd9281652ee45d674494c1a35","modified":1542270408233},{"_id":"themes/matery/.git/objects/0c/27ee3e3cd42726a3447660c12854a1d7cab306","hash":"26492ef9e8cd17dd1c14eca472df113e85246b5f","modified":1542271895207},{"_id":"themes/matery/.git/objects/75/26bdeedbdd08a7a5d67535018a7577032cff9f","hash":"231429a97b64748e3f826d5a8ab988962527cf8b","modified":1542271895249},{"_id":"themes/matery/.git/objects/69/18a04187f55dddb985bf3b70393b0ec057ef97","hash":"a211bdbf746b2a5009f124c4b0e4d05f320d2d9c","modified":1542267862000},{"_id":"themes/matery/.git/objects/93/275d970a339e101903731daf72351493ee5822","hash":"73fc0d0c2f8182dd94868f71ef2b86c0679345c2","modified":1542295699831},{"_id":"themes/matery/.git/objects/a7/3149d27f3a76b8f876705da903a643d4ad571a","hash":"b26edd450dfaea2be2b0c9006ff67d89ab25c63a","modified":1542270108427},{"_id":"themes/matery/.git/objects/c7/952d8b1215ad263e77e9ddb339e3888c3542ea","hash":"cdf08518857559177a8fc9bc5c3e99db3f8102de","modified":1542271895248},{"_id":"themes/matery/.git/objects/pack/pack-e1b44453b67a49ef595fb0cd35e30160e35780b3.idx","hash":"8c82fc99f00af73db078ae187584a54b6c4d407a","modified":1542208548349},{"_id":"themes/matery/.git/refs/heads/develop","hash":"874219868bd3f6e372c21b9ce191c278172d2a6a","modified":1542208548359},{"_id":"themes/matery/source/medias/cover.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1542208548436},{"_id":"themes/matery/source/medias/featureimages/13.jpg","hash":"66706dfde7d910182c2f1dbadd0e9e917630b8dd","modified":1542208548439},{"_id":"themes/matery/source/medias/featureimages/15.jpg","hash":"5cf9fc64d5d74ab6ba69bb8bff580fdc22ba32d0","modified":1542208548441},{"_id":"themes/matery/source/medias/featureimages/16.jpg","hash":"9cac6b80b0cc8959fc8aabfbd1adcab79ebebfc9","modified":1542208548441},{"_id":"themes/matery/source/medias/featureimages/2.jpg","hash":"16f1d89cdba4dce935ac0f12599e0fcfda543a93","modified":1542208548443},{"_id":"themes/matery/source/medias/featureimages/21.jpg","hash":"d70b088850c3565e5b5bb9eb8fe4abe688c964cf","modified":1542208548444},{"_id":"themes/matery/source/medias/featureimages/22.jpg","hash":"bf5b59d193e5ca089a7fff034c222bfa2c4dc41f","modified":1542208548445},{"_id":"themes/matery/source/medias/featureimages/23.jpg","hash":"ed5ac9f616d3b99af5188a10b1761884c37e93e5","modified":1542208548445},{"_id":"themes/matery/source/medias/featureimages/5.jpg","hash":"c3c1f36a1b1886037db604f151f335cd4599e970","modified":1542208548447},{"_id":"themes/matery/source/medias/featureimages/8.jpg","hash":"5a46ca4ab4c4ab2101a2af77a31a8878bccc483c","modified":1542208548448},{"_id":"themes/matery/source/medias/featureimages/7.jpg","hash":"a0246a4a560438938489cdd154e35f172b3f31b0","modified":1542208548448},{"_id":"themes/matery/source/medias/reward/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542266566514},{"_id":"themes/matery/source/medias/reward/alipay.jpg","hash":"e50342ce8f70ee387ab897f31e6e5ad333eeb8f4","modified":1542263717869},{"_id":"themes/matery/source/libs/animate/animate.min.css","hash":"97afa151569f046b2e01f27c1871646e9cd87caf","modified":1542208548377},{"_id":"themes/matery/source/libs/aos/aos.css","hash":"191a3705a8f63e589a50a0ff2f2c5559f1a1b6b2","modified":1542208548377},{"_id":"themes/matery/source/libs/aos/aos.js","hash":"02bfb40b0c4b6e9b0b4081218357145cbb327d74","modified":1542208548377},{"_id":"themes/matery/source/libs/gitalk/gitalk.css","hash":"3aac1db83b0135c521187254ff302d125cc30706","modified":1542208548393},{"_id":"themes/matery/source/libs/gitment/gitment-default.css","hash":"2903c59ee06b965bef32e937bd69f5b0b2190717","modified":1542208548395},{"_id":"themes/matery/source/libs/jqcloud/jqcloud-1.0.4.min.js","hash":"257eaae3020599e4939f50d5008a743827f25b8c","modified":1542208548396},{"_id":"themes/matery/source/libs/jqcloud/jqcloud.css","hash":"20d9f11a19d95c70e27cb922e0d6dccbec4eae89","modified":1542208548396},{"_id":"themes/matery/source/libs/masonry/masonry.pkgd.min.js","hash":"ff940b4ea68368ca0e4d5560cbb79fb147dfc3c5","modified":1542208548401},{"_id":"themes/matery/source/libs/scrollprogress/scrollProgress.min.js","hash":"777ffe5d07e85a14fbe97d846f45ffc0087251cc","modified":1542208548424},{"_id":"themes/matery/source/libs/tocbot/tocbot.css","hash":"15601837bf8557c2fd111e4450ed4c8495fd11a0","modified":1542208548427},{"_id":"themes/matery/source/libs/tocbot/tocbot.min.js","hash":"5ec27317f0270b8cf6b884c6f12025700b9a565c","modified":1542208548429},{"_id":"themes/matery/source/medias/featureimages/0.jpg","hash":"2066cdda98ad0035071cd4aa7bd696eb078c0b6d","modified":1542208548437},{"_id":"themes/matery/source/medias/featureimages/1.jpg","hash":"d16e28bd23ea3a63643826dde5eea6b7a9bdda5d","modified":1542208548437},{"_id":"themes/matery/source/medias/featureimages/10.jpg","hash":"838e704942de076c60894d14e5f280e2724b6f68","modified":1542208548438},{"_id":"themes/matery/source/medias/featureimages/11.jpg","hash":"9ed45f95b83626e3d91d6c405eb8bfe6fcb9736a","modified":1542208548438},{"_id":"themes/matery/source/medias/featureimages/12.jpg","hash":"047be4239dd7e0be83243ee6b49a392a61f16b9a","modified":1542208548439},{"_id":"themes/matery/source/medias/featureimages/14.jpg","hash":"8aeb816faca2d5eaea4cce9e881d6ff87b8c7cf1","modified":1542208548440},{"_id":"themes/matery/source/medias/featureimages/17.jpg","hash":"f168ca5b046d10a878a7b0bcfab540e2c4428887","modified":1542208548442},{"_id":"themes/matery/source/medias/featureimages/18.jpg","hash":"ae23fdfaa59bc57b7ed49e90c5d59e4b68e1eea5","modified":1542208548442},{"_id":"themes/matery/source/medias/featureimages/19.jpg","hash":"57bc7c804b78b5cceb4eb1f9e51b734b75151b71","modified":1542208548443},{"_id":"themes/matery/source/medias/featureimages/20.jpg","hash":"8271c4a327632b566ea62f546c083d08a0528e72","modified":1542208548444},{"_id":"themes/matery/source/medias/featureimages/3.jpg","hash":"5e879652e032f02961a331b598a50b60ebe80a39","modified":1542208548446},{"_id":"themes/matery/source/medias/featureimages/4.jpg","hash":"4eea5bdb5724ef1ed65790e481eda0d2fb176bf0","modified":1542208548447},{"_id":"themes/matery/source/medias/featureimages/6.jpg","hash":"c63ff64bdd5f6c82da8804c7248fc519d23eaf0b","modified":1542208548447},{"_id":"themes/matery/source/medias/featureimages/9.jpg","hash":"815c84778b721e3606c2bd7c099c7de7c53251ba","modified":1542208548449},{"_id":"themes/matery/source/medias/reward/wechat.png","hash":"69afcf9556a7533f1fb548e670c4a120569d446c","modified":1542264056645},{"_id":"themes/matery/source/libs/gitment/gitment.js","hash":"28c02c45ce568e084cd1041dc493f83f9c6c88c6","modified":1542208548396},{"_id":"themes/matery/source/libs/jquery/jquery-2.2.0.min.js","hash":"5d7e5bbfa540f0e53bd599e4305e1a4e815b5dd1","modified":1542208548398},{"_id":"themes/matery/.git/logs/refs/heads/develop","hash":"dc1bedbbfe292f45b710d1f895153035af2ee4fd","modified":1542208548360},{"_id":"themes/matery/.git/objects/e0/fcfab75de89504b0adeb1d5c22e0e63c596c70","hash":"41611bf60fb90d5f5ec55d0019bb7ebab13e853b","modified":1542272047612},{"_id":"themes/matery/.git/refs/remotes/origin/HEAD","hash":"cb587ac979c5a12ea2fad8ca5af781961c1b0668","modified":1542208548358},{"_id":"themes/matery/source/medias/banner/5.jpg","hash":"1cc3c634b8ebb9deb60fa2beeddeeb48a11c726f","modified":1542271960646},{"_id":"themes/matery/source/libs/awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1542208548378},{"_id":"themes/matery/source/libs/gitalk/gitalk.min.js","hash":"734f56442e62fe55f677e8ccae7f175445667767","modified":1542208548394},{"_id":"themes/matery/source/libs/lightGallery/css/lightgallery.min.css","hash":"1b7227237f9785c66062a4811508916518e4132c","modified":1542208548398},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.eot","hash":"54caf05a81e33d7bf04f2e420736ce6f1de5f936","modified":1542208548399},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.svg","hash":"9a732790adc004b22022cc60fd5f77ec4c8e3e5a","modified":1542208548399},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.ttf","hash":"f6421c0c397311ae09f9257aa58bcd5e9720f493","modified":1542208548399},{"_id":"themes/matery/source/libs/lightGallery/fonts/lg.woff","hash":"3048de344dd5cad4624e0127e58eaae4b576f574","modified":1542208548399},{"_id":"themes/matery/source/libs/lightGallery/img/loading.gif","hash":"15a76af2739482d8de7354abc6d8dc4fca8d145e","modified":1542208548400},{"_id":"themes/matery/source/libs/lightGallery/img/video-play.png","hash":"fbfdbe06aebf7d0c00da175a4810cf888d128f11","modified":1542208548400},{"_id":"themes/matery/source/libs/lightGallery/img/vimeo-play.png","hash":"1142b47de219dddfba2e712cd3189dec0c8b7bee","modified":1542208548400},{"_id":"themes/matery/source/libs/lightGallery/img/youtube-play.png","hash":"39150b45ec5fc03155b7ebeaa44f1829281788e2","modified":1542208548400},{"_id":"themes/matery/source/libs/lightGallery/js/lightgallery-all.min.js","hash":"9f5ef4bc8a0a3c746ca4f3c3e6d64493b1a977d8","modified":1542208548401},{"_id":"themes/matery/source/libs/share/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1542208548425},{"_id":"themes/matery/source/libs/share/fonts/iconfont.eot","hash":"00ff749c8e202401190cc98d56087cdda716abe4","modified":1542208548425},{"_id":"themes/matery/source/libs/share/fonts/iconfont.svg","hash":"f0a1b849868a6bf351ff98dc3924a4e7254eb88b","modified":1542208548425},{"_id":"themes/matery/source/libs/share/fonts/iconfont.ttf","hash":"afd898f59d363887418669520b24d175f966a083","modified":1542208548426},{"_id":"themes/matery/source/libs/share/fonts/iconfont.woff","hash":"2e3fce1dcfbd6e2114e7bfbeaf72d3c62e15a1bd","modified":1542208548426},{"_id":"themes/matery/source/libs/share/js/jquery.share.min.js","hash":"16ce82901ca0e302cf47a35fb10f59009a5e7eb9","modified":1542208548426},{"_id":"themes/matery/source/libs/share/js/social-share.min.js","hash":"4df722bafde2c5d8faaace0d1f894798385a8793","modified":1542208548427},{"_id":"themes/matery/.git/objects/06/960bac9bfbd6abd1275ca8832752a23a8b9e0c","hash":"406bdd0a0bcc15f41b6e9b4d210e312537a82804","modified":1542271895247},{"_id":"themes/matery/.git/objects/06/e61fd52ac7f2c0ac61e2e8ee173bdde99fa0c5","hash":"c8b46b4532787bbc5d4160924fd6278d16ea38eb","modified":1542272047599},{"_id":"themes/matery/source/medias/banner/2.jpg","hash":"c099c9815480cb68cb08d83ba3de5e8859f88875","modified":1542271803726},{"_id":"themes/matery/source/medias/banner/3.jpg","hash":"983d02fc8e151e76dae93b1294bce10fe06d6744","modified":1542271994239},{"_id":"themes/matery/source/medias/banner/old/0.jpg","hash":"1f2ec55fe7825475fde2601573bb622f0bf2acba","modified":1542208548431},{"_id":"themes/matery/source/medias/banner/old/2.jpg","hash":"8d3c8391ff161eec70f66d69e5545a9468cc52ef","modified":1542208548432},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1542208548388},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1542208548388},{"_id":"themes/matery/source/libs/materialize/js/materialize.min.js","hash":"900e478fb609e18a4f785164fc6f6b0442e8a94e","modified":1542208548424},{"_id":"themes/matery/.git/logs/refs/remotes/origin/HEAD","hash":"dc1bedbbfe292f45b710d1f895153035af2ee4fd","modified":1542208548358},{"_id":"themes/matery/.git/objects/ba/e1ab2cdd0c8921c963ab67cf091010ab11397d","hash":"3817b219bf75bc8e65d2282e23d750e8befeb06f","modified":1542270853354},{"_id":"themes/matery/source/medias/banner/4.jpg","hash":"f0d7f450fc892ef3557e86479bb2ca62fb3b3f6a","modified":1542270778254},{"_id":"themes/matery/source/medias/banner/old/1.jpg","hash":"c3d5ab183b39a7140941b8375e29498f9d24f343","modified":1542208548432},{"_id":"themes/matery/source/medias/banner/old/3.jpg","hash":"d4957ff7cc5e88555cd840f2956ab0561e6f1ccf","modified":1542208548433},{"_id":"themes/matery/source/medias/banner/old/5.jpg","hash":"4a08deec1dd5b4f1490e8fc23adfb75a0f88b0c4","modified":1542208548435},{"_id":"themes/matery/source/medias/banner/old/6.jpg","hash":"62e9586a8cec91a160f147c424a3d1d1aea360f9","modified":1542208548436},{"_id":"themes/matery/source/libs/awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1542208548379},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1542208548381},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1542208548387},{"_id":"themes/matery/source/libs/materialize/css/materialize.min.css","hash":"ca9b5271c307593264daad9753b962a0a8db1cef","modified":1542208548403},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/LICENSE.txt","hash":"540e43aea993ada0c9b4b50ae5843494d8b7cc28","modified":1542208548403},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff2","hash":"2355cb4f824d070bc42c4ce6b97cab71af1f4ca2","modified":1542208548409},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.eot","hash":"a76cd602f5188b9fbd4ba7443dcb9c064e3dbf10","modified":1542208548409},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff","hash":"ee99cd87a59a9a5d4092c83232bb3eec67547425","modified":1542208548411},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.woff2","hash":"933b866d09c2b087707a98dab64b3888865eeb96","modified":1542208548411},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.eot","hash":"42fe156996197e5eb0c0264c5d1bb3b4681f4595","modified":1542208548412},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.eot","hash":"1517f4b6e1c5d0e5198f937557253aac8fab0416","modified":1542208548415},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff2","hash":"bbdc28b887400fcb340b504ec2904993af42a5d7","modified":1542208548415},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.woff","hash":"6300f659be9e834ab263efe2fb3c581d48b1e7b2","modified":1542208548414},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff","hash":"d45f84922131364989ad6578c7a06b6b4fc22c34","modified":1542208548417},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.eot","hash":"77ae3e980ec03863ebe2587a8ef9ddfd06941db0","modified":1542208548418},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.woff2","hash":"6cc1b73571af9e827c4e7e91418f476703cd4c4b","modified":1542208548417},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff","hash":"74734dde8d94e7268170f9b994dedfbdcb5b3a15","modified":1542208548420},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.woff2","hash":"ed1558b0541f5e01ce48c7db1588371b990eec19","modified":1542208548420},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.eot","hash":"0790a51a848dbe7292c98f9d0459218bf1a8ffdd","modified":1542208548421},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff","hash":"fbc3e71d456c96667d8082ab910e3946ef89240b","modified":1542208548422},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.woff2","hash":"2449e3dac5ddb7c3da8bb07450493b62d052758c","modified":1542208548423},{"_id":"themes/matery/.git/objects/93/31580a453bcd39973b5417bf2e8e9b391286e3","hash":"98a7efec0f0f1a5b01d71dd5a8e64cd162bca1c1","modified":1542272047586},{"_id":"themes/matery/.git/objects/ad/1f6783ddf59070075c7f510b618b6d5ba9b6b3","hash":"6e89a142b86785b8aad3b0c144a9ff5338a218c6","modified":1542271895233},{"_id":"themes/matery/source/medias/banner/0.jpg","hash":"5d1776470e6da0b55eec7a208e59b3bc79b101a4","modified":1542272018936},{"_id":"themes/matery/source/medias/banner/1.jpg","hash":"23ace2644d7e0d110d0ab3f8c59ae1d2eb6c42a2","modified":1542271763379},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.eot","hash":"fc1bc1337f3313ead42b22a67a142d4e0d356b3a","modified":1542208548405},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.ttf","hash":"2cb66ac73a2d32ae8d2f807f705eff26fcf93323","modified":1542208548407},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.woff","hash":"ee77184556f7b66fcb8ee9496f81ac62f792d7dc","modified":1542208548408},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Bold.ttf","hash":"47327df0f35e7cd7c8645874897a7449697544ae","modified":1542208548410},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Light.ttf","hash":"e321c183e2b75ee19813892b7bac8d7c411cb88a","modified":1542208548414},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Medium.ttf","hash":"6060ca726b9760b76f7c347dce9d2fa1fe42ec92","modified":1542208548416},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Regular.ttf","hash":"824b5480c977a8166e177e5357d13164ccc45f47","modified":1542208548419},{"_id":"themes/matery/source/libs/materialize/font/roboto/Roboto-Thin.ttf","hash":"173ed64528b4d010a76d8d38deb1d7e7eed58eda","modified":1542208548422},{"_id":"themes/matery/source/medias/banner/old/7.jpg","hash":"56850c3139cbd72a0eff0c35d8fac32c9c66dd6a","modified":1542208548434},{"_id":"themes/matery/source/libs/awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1542208548385},{"_id":"themes/matery/source/libs/materialize/font/material-design-icons/Material-Design-Icons.svg","hash":"757d54367f0df16a783769eec0ba974f42bd7dce","modified":1542208548406},{"_id":"themes/matery/source/libs/echarts/echarts.min.js","hash":"9496f386a0da4601cad22c479cc5543913a4d67f","modified":1542208548393},{"_id":"themes/matery/.git/objects/pack/pack-e1b44453b67a49ef595fb0cd35e30160e35780b3.pack","hash":"930610e3714ba8028627338edc0cbfda1a721813","modified":1542295631000},{"_id":"source/images/bg/docker.png","hash":"241489a359582d7f695ee8128c8217e451dab1fc","modified":1542336736000}],"Category":[{"name":"前端","_id":"cjojepo8r0005pxt8rcgbktvz"},{"name":"linux","_id":"cjojepo8y000cpxt8yxwfgsyj"},{"name":"后端","_id":"cjojepo90000gpxt8ub8tboue"},{"name":"数据库","_id":"cjojepo91000lpxt8vh5eeae3"},{"name":"缓存","_id":"cjojepo92000ppxt8wspo95vs"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n    <meta name=\"robots\" content=\"all\" />\n    <meta name=\"robots\" content=\"index,follow\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\"\n        homePageName=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2018-11-14T08:03:54.887Z","updated":"2018-11-14T08:03:54.886Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cjojepo7l0000pxt8cb3gzlut","content":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n<link rel=\"stylesheet\" href=\"/css/prism-base16-ateliersulphurpool.light.css\" type=\"text/css\"></head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"robots\" content=\"all\">\n    <meta name=\"robots\" content=\"index,follow\">\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n<link rel=\"stylesheet\" href=\"/css/prism-base16-ateliersulphurpool.light.css\" type=\"text/css\"></head>\n<body>\n<script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n</script>\n<script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n<script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"about","date":"2018-11-15T15:21:47.000Z","_content":"","source":"about/index-1.md","raw":"---\ntitle: about\ndate: 2018-11-15 23:21:47\n---\n","updated":"2018-11-15T15:21:47.243Z","path":"about/index-1.html","comments":1,"layout":"page","_id":"cjojepo8o0002pxt80or15bx4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2018-09-30T09:25:30.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-09-30 17:25:30\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2018-11-15T15:22:22.495Z","path":"about/index.html","comments":1,"_id":"cjojepo8q0004pxt8hzpfxjmn","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2018-09-30T09:25:30.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-09-30 17:25:30\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2018-11-15T09:06:36.015Z","path":"categories/index.html","comments":1,"_id":"cjojepo8u0008pxt8l35y1hj7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-09-30T10:23:38.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-09-30 18:23:38\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2018-11-15T15:15:42.975Z","path":"tags/index.html","comments":1,"_id":"cjojepo8w000apxt8kg9fllg8","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"test","date":"2018-11-14T02:41:47.000Z","_content":"","source":"test/index.md","raw":"---\ntitle: test\ndate: 2018-11-14 10:41:47\n---\n","updated":"2018-11-14T02:41:47.920Z","path":"test/index.html","comments":1,"layout":"page","_id":"cjojepo8y000epxt8viry9ipr","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"windows通过虚拟机使用docker","img":"/images/bg/docker.png","_content":"\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","source":"_posts/hello--world.md","raw":"---\ntitle: windows通过虚拟机使用docker\ncategories:\n- 前端\ntags:\n- vue\n- webpack\nimg: /images/bg/docker.png\n---\n\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","slug":"hello--world","published":1,"date":"2018-11-16T02:53:06.825Z","updated":"2018-11-16T02:53:06.825Z","_id":"cjojepo8j0001pxt8ynnuaulq","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#国内源</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n<span class=\"token comment\" spellcheck=\"true\"># 官方源</span>\n<span class=\"token comment\" spellcheck=\"true\"># $ sudo yum-config-manager \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># --add-repo \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># https://download.docker.com/linux/centos/docker-ce.repo</span>\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#安装最新版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-edge\n<span class=\"token comment\" spellcheck=\"true\">#安装测试版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-test\n<span class=\"token comment\" spellcheck=\"true\">#正式安装</span>\n$ <span class=\"token function\">sudo</span> yum makecache fast\n$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ <span class=\"token function\">sudo</span> sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">$ vim /etc/docker/daemon.json\n<span class=\"token comment\" spellcheck=\"true\">#添加</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"http://hub-mirror.c.163.com\"</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">#保存重启docker</span>\n$ <span class=\"token function\">sudo</span> systemctl daemon-reload\n$ <span class=\"token function\">sudo</span> systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> <span class=\"token operator\">></span> /usr/local/bin/docker-compose\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#如果装载点目录尚不存在，请创建该目录。</span>\n$ <span class=\"token function\">mkdir</span> /mnt/cdrom\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。</span>\n$ <span class=\"token function\">mount</span> /dev/cdrom /mnt/cdrom\n\n<span class=\"token comment\" spellcheck=\"true\">#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。</span>\n<span class=\"token comment\" spellcheck=\"true\">#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。</span>\n<span class=\"token comment\" spellcheck=\"true\">#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。</span>\n$ <span class=\"token function\">ls</span> mount-point\n<span class=\"token comment\" spellcheck=\"true\">#解压缩安装程序。</span>\n$ <span class=\"token function\">tar</span> zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  <span class=\"token comment\" spellcheck=\"true\">#x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 如果需要，请卸载 CD-ROM 映像。</span>\n$ <span class=\"token function\">umount</span> /dev/cdrom \n<span class=\"token comment\" spellcheck=\"true\">#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#运行安装程序并以 root 用户身份配置 VMware Tools。</span>\n$ <span class=\"token function\">cd</span> /tmp/vmware-tools-distrib\n$ <span class=\"token function\">sudo</span> ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#查看当前虚拟机设置共享的文件夹</span>\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ <span class=\"token function\">mount</span> -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n<span class=\"token comment\" spellcheck=\"true\">#如果报错Error: cannot mount filesystem: No such device 执行：</span>\n$ <span class=\"token function\">sudo</span> vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre><code class=\"bash\">$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre><code class=\"bash\">$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre><code class=\"bash\">#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre><code class=\"bash\">#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre><code class=\"bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre><code class=\"bash\">$ vim /etc/docker/daemon.json\n#添加\n{\n    &quot;registry-mirrors&quot;: [\n        &quot;http://hub-mirror.c.163.com&quot;\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre><code class=\"bash\">$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre><code class=\"bash\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre><code class=\"bash\">#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n"},{"title":"windows通过虚拟机使用docker","img":"/images/bg/docker.png","_content":"\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","source":"_posts/hello-world.md","raw":"---\ntitle: windows通过虚拟机使用docker\ncategories:\n- linux\ntags:\n- shell\nimg: /images/bg/docker.png\n---\n\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","slug":"hello-world","published":1,"date":"2018-11-16T02:53:06.828Z","updated":"2018-11-16T02:53:06.829Z","_id":"cjojepo8o0003pxt8dhxqsw29","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#国内源</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n<span class=\"token comment\" spellcheck=\"true\"># 官方源</span>\n<span class=\"token comment\" spellcheck=\"true\"># $ sudo yum-config-manager \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># --add-repo \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># https://download.docker.com/linux/centos/docker-ce.repo</span>\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#安装最新版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-edge\n<span class=\"token comment\" spellcheck=\"true\">#安装测试版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-test\n<span class=\"token comment\" spellcheck=\"true\">#正式安装</span>\n$ <span class=\"token function\">sudo</span> yum makecache fast\n$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ <span class=\"token function\">sudo</span> sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">$ vim /etc/docker/daemon.json\n<span class=\"token comment\" spellcheck=\"true\">#添加</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"http://hub-mirror.c.163.com\"</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">#保存重启docker</span>\n$ <span class=\"token function\">sudo</span> systemctl daemon-reload\n$ <span class=\"token function\">sudo</span> systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> <span class=\"token operator\">></span> /usr/local/bin/docker-compose\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#如果装载点目录尚不存在，请创建该目录。</span>\n$ <span class=\"token function\">mkdir</span> /mnt/cdrom\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。</span>\n$ <span class=\"token function\">mount</span> /dev/cdrom /mnt/cdrom\n\n<span class=\"token comment\" spellcheck=\"true\">#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。</span>\n<span class=\"token comment\" spellcheck=\"true\">#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。</span>\n<span class=\"token comment\" spellcheck=\"true\">#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。</span>\n$ <span class=\"token function\">ls</span> mount-point\n<span class=\"token comment\" spellcheck=\"true\">#解压缩安装程序。</span>\n$ <span class=\"token function\">tar</span> zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  <span class=\"token comment\" spellcheck=\"true\">#x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 如果需要，请卸载 CD-ROM 映像。</span>\n$ <span class=\"token function\">umount</span> /dev/cdrom \n<span class=\"token comment\" spellcheck=\"true\">#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#运行安装程序并以 root 用户身份配置 VMware Tools。</span>\n$ <span class=\"token function\">cd</span> /tmp/vmware-tools-distrib\n$ <span class=\"token function\">sudo</span> ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#查看当前虚拟机设置共享的文件夹</span>\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ <span class=\"token function\">mount</span> -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n<span class=\"token comment\" spellcheck=\"true\">#如果报错Error: cannot mount filesystem: No such device 执行：</span>\n$ <span class=\"token function\">sudo</span> vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre><code class=\"bash\">$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre><code class=\"bash\">$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre><code class=\"bash\">#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre><code class=\"bash\">#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre><code class=\"bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre><code class=\"bash\">$ vim /etc/docker/daemon.json\n#添加\n{\n    &quot;registry-mirrors&quot;: [\n        &quot;http://hub-mirror.c.163.com&quot;\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre><code class=\"bash\">$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre><code class=\"bash\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre><code class=\"bash\">#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n"},{"title":"windows通过虚拟机使用docker","img":"/images/bg/docker.png","_content":"\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","source":"_posts/hello__world.md","raw":"---\ntitle: windows通过虚拟机使用docker\ncategories:\n- 后端\ntags:\n- php\n- laravel\nimg: /images/bg/docker.png\n---\n\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","slug":"hello__world","published":1,"date":"2018-11-16T02:53:06.831Z","updated":"2018-11-16T02:53:06.832Z","_id":"cjojepo8t0007pxt845bx617r","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#国内源</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n<span class=\"token comment\" spellcheck=\"true\"># 官方源</span>\n<span class=\"token comment\" spellcheck=\"true\"># $ sudo yum-config-manager \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># --add-repo \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># https://download.docker.com/linux/centos/docker-ce.repo</span>\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#安装最新版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-edge\n<span class=\"token comment\" spellcheck=\"true\">#安装测试版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-test\n<span class=\"token comment\" spellcheck=\"true\">#正式安装</span>\n$ <span class=\"token function\">sudo</span> yum makecache fast\n$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ <span class=\"token function\">sudo</span> sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">$ vim /etc/docker/daemon.json\n<span class=\"token comment\" spellcheck=\"true\">#添加</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"http://hub-mirror.c.163.com\"</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">#保存重启docker</span>\n$ <span class=\"token function\">sudo</span> systemctl daemon-reload\n$ <span class=\"token function\">sudo</span> systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> <span class=\"token operator\">></span> /usr/local/bin/docker-compose\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#如果装载点目录尚不存在，请创建该目录。</span>\n$ <span class=\"token function\">mkdir</span> /mnt/cdrom\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。</span>\n$ <span class=\"token function\">mount</span> /dev/cdrom /mnt/cdrom\n\n<span class=\"token comment\" spellcheck=\"true\">#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。</span>\n<span class=\"token comment\" spellcheck=\"true\">#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。</span>\n<span class=\"token comment\" spellcheck=\"true\">#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。</span>\n$ <span class=\"token function\">ls</span> mount-point\n<span class=\"token comment\" spellcheck=\"true\">#解压缩安装程序。</span>\n$ <span class=\"token function\">tar</span> zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  <span class=\"token comment\" spellcheck=\"true\">#x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 如果需要，请卸载 CD-ROM 映像。</span>\n$ <span class=\"token function\">umount</span> /dev/cdrom \n<span class=\"token comment\" spellcheck=\"true\">#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#运行安装程序并以 root 用户身份配置 VMware Tools。</span>\n$ <span class=\"token function\">cd</span> /tmp/vmware-tools-distrib\n$ <span class=\"token function\">sudo</span> ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#查看当前虚拟机设置共享的文件夹</span>\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ <span class=\"token function\">mount</span> -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n<span class=\"token comment\" spellcheck=\"true\">#如果报错Error: cannot mount filesystem: No such device 执行：</span>\n$ <span class=\"token function\">sudo</span> vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre><code class=\"bash\">$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre><code class=\"bash\">$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre><code class=\"bash\">#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre><code class=\"bash\">#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre><code class=\"bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre><code class=\"bash\">$ vim /etc/docker/daemon.json\n#添加\n{\n    &quot;registry-mirrors&quot;: [\n        &quot;http://hub-mirror.c.163.com&quot;\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre><code class=\"bash\">$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre><code class=\"bash\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre><code class=\"bash\">#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n"},{"title":"windows通过虚拟机使用docker","img":"/images/bg/docker.png","_content":"\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","source":"_posts/hello_world.md","raw":"---\ntitle: windows通过虚拟机使用docker\ncategories:\n- 数据库\ntags:\n- mysql\n- 主从同步\nimg: /images/bg/docker.png\n---\n\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","slug":"hello_world","published":1,"date":"2018-11-16T02:53:06.834Z","updated":"2018-11-16T02:53:06.834Z","_id":"cjojepo8v0009pxt8rmrar9rm","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#国内源</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n<span class=\"token comment\" spellcheck=\"true\"># 官方源</span>\n<span class=\"token comment\" spellcheck=\"true\"># $ sudo yum-config-manager \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># --add-repo \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># https://download.docker.com/linux/centos/docker-ce.repo</span>\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#安装最新版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-edge\n<span class=\"token comment\" spellcheck=\"true\">#安装测试版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-test\n<span class=\"token comment\" spellcheck=\"true\">#正式安装</span>\n$ <span class=\"token function\">sudo</span> yum makecache fast\n$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ <span class=\"token function\">sudo</span> sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">$ vim /etc/docker/daemon.json\n<span class=\"token comment\" spellcheck=\"true\">#添加</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"http://hub-mirror.c.163.com\"</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">#保存重启docker</span>\n$ <span class=\"token function\">sudo</span> systemctl daemon-reload\n$ <span class=\"token function\">sudo</span> systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> <span class=\"token operator\">></span> /usr/local/bin/docker-compose\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#如果装载点目录尚不存在，请创建该目录。</span>\n$ <span class=\"token function\">mkdir</span> /mnt/cdrom\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。</span>\n$ <span class=\"token function\">mount</span> /dev/cdrom /mnt/cdrom\n\n<span class=\"token comment\" spellcheck=\"true\">#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。</span>\n<span class=\"token comment\" spellcheck=\"true\">#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。</span>\n<span class=\"token comment\" spellcheck=\"true\">#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。</span>\n$ <span class=\"token function\">ls</span> mount-point\n<span class=\"token comment\" spellcheck=\"true\">#解压缩安装程序。</span>\n$ <span class=\"token function\">tar</span> zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  <span class=\"token comment\" spellcheck=\"true\">#x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 如果需要，请卸载 CD-ROM 映像。</span>\n$ <span class=\"token function\">umount</span> /dev/cdrom \n<span class=\"token comment\" spellcheck=\"true\">#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#运行安装程序并以 root 用户身份配置 VMware Tools。</span>\n$ <span class=\"token function\">cd</span> /tmp/vmware-tools-distrib\n$ <span class=\"token function\">sudo</span> ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#查看当前虚拟机设置共享的文件夹</span>\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ <span class=\"token function\">mount</span> -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n<span class=\"token comment\" spellcheck=\"true\">#如果报错Error: cannot mount filesystem: No such device 执行：</span>\n$ <span class=\"token function\">sudo</span> vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre><code class=\"bash\">$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre><code class=\"bash\">$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre><code class=\"bash\">#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre><code class=\"bash\">#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre><code class=\"bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre><code class=\"bash\">$ vim /etc/docker/daemon.json\n#添加\n{\n    &quot;registry-mirrors&quot;: [\n        &quot;http://hub-mirror.c.163.com&quot;\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre><code class=\"bash\">$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre><code class=\"bash\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre><code class=\"bash\">#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n"},{"title":"windows通过虚拟机使用docker","img":"/images/bg/docker.png","_content":"\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","source":"_posts/helloworld.md","raw":"---\ntitle: windows通过虚拟机使用docker\ncategories:\n- 缓存\ntags:\n- redis\nimg: /images/bg/docker.png\n---\n\n## 1、centos yum安装docker\n#### 卸载旧版本\n```bash\n$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n```\n#### 安装依赖包\n```bash\n$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n```\n#### 添加yum源\n```bash\n#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n```\n#### 安装Docker CE\n```bash\n#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n```\n## 2、脚本自动安装\n```bash\n$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n```\n## 3、镜像加速\n方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)\n```bash\n$ vim /etc/docker/daemon.json\n#添加\n{\n    \"registry-mirrors\": [\n        \"http://hub-mirror.c.163.com\"\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n```\n## 4、docker-compose 安装\n```bash\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n```\n至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了\n接下来，实现虚拟机文件共享\n## [在 Linux 虚拟机中手动安装 VMware Tools](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html)\n在主机上，从 Workstation Pro 菜单栏中选择虚拟机 > 安装 VMware Tools。\n如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。\n```bash\n#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n```\n接下来就是根据提示键y/n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html)\n![](/images/screenshot.png)\n\n\n## [在 Linux 客户机中装载共享文件夹](https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html)\n```bash\n#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n```","slug":"helloworld","published":1,"date":"2018-11-16T02:53:06.836Z","updated":"2018-11-16T02:53:06.836Z","_id":"cjojepo8w000bpxt8mzss1uy7","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#国内源</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n<span class=\"token comment\" spellcheck=\"true\"># 官方源</span>\n<span class=\"token comment\" spellcheck=\"true\"># $ sudo yum-config-manager \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># --add-repo \\</span>\n<span class=\"token comment\" spellcheck=\"true\"># https://download.docker.com/linux/centos/docker-ce.repo</span>\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#安装最新版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-edge\n<span class=\"token comment\" spellcheck=\"true\">#安装测试版本的 Docker CE</span>\n$ <span class=\"token function\">sudo</span> yum-config-manager --enable docker-ce-test\n<span class=\"token comment\" spellcheck=\"true\">#正式安装</span>\n$ <span class=\"token function\">sudo</span> yum makecache fast\n$ <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ <span class=\"token function\">sudo</span> sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre class=\" language-bash\"><code class=\"language-bash\">$ vim /etc/docker/daemon.json\n<span class=\"token comment\" spellcheck=\"true\">#添加</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"registry-mirrors\"</span><span class=\"token keyword\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"http://hub-mirror.c.163.com\"</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\" spellcheck=\"true\">#保存重启docker</span>\n$ <span class=\"token function\">sudo</span> systemctl daemon-reload\n$ <span class=\"token function\">sudo</span> systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre class=\" language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">sudo</span> curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -s<span class=\"token variable\">`</span></span>-<span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">uname</span> -m<span class=\"token variable\">`</span></span> <span class=\"token operator\">></span> /usr/local/bin/docker-compose\n$ <span class=\"token function\">sudo</span> <span class=\"token function\">chmod</span> +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#如果装载点目录尚不存在，请创建该目录。</span>\n$ <span class=\"token function\">mkdir</span> /mnt/cdrom\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#装载 CD-ROM 驱动器。</span>\n<span class=\"token comment\" spellcheck=\"true\">#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。</span>\n$ <span class=\"token function\">mount</span> /dev/cdrom /mnt/cdrom\n\n<span class=\"token comment\" spellcheck=\"true\">#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。</span>\n<span class=\"token comment\" spellcheck=\"true\">#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。</span>\n<span class=\"token comment\" spellcheck=\"true\">#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。</span>\n$ <span class=\"token function\">ls</span> mount-point\n<span class=\"token comment\" spellcheck=\"true\">#解压缩安装程序。</span>\n$ <span class=\"token function\">tar</span> zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  <span class=\"token comment\" spellcheck=\"true\">#x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。</span>\n<span class=\"token comment\" spellcheck=\"true\"># 如果需要，请卸载 CD-ROM 映像。</span>\n$ <span class=\"token function\">umount</span> /dev/cdrom \n<span class=\"token comment\" spellcheck=\"true\">#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。</span>\n\n<span class=\"token comment\" spellcheck=\"true\">#运行安装程序并以 root 用户身份配置 VMware Tools。</span>\n$ <span class=\"token function\">cd</span> /tmp/vmware-tools-distrib\n$ <span class=\"token function\">sudo</span> ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre class=\" language-bash\"><code class=\"language-bash\"><span class=\"token comment\" spellcheck=\"true\">#查看当前虚拟机设置共享的文件夹</span>\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ <span class=\"token function\">mount</span> -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n<span class=\"token comment\" spellcheck=\"true\">#如果报错Error: cannot mount filesystem: No such device 执行：</span>\n$ <span class=\"token function\">sudo</span> vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1、centos-yum安装docker\"><a href=\"#1、centos-yum安装docker\" class=\"headerlink\" title=\"1、centos yum安装docker\"></a>1、centos yum安装docker</h2><h4 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h4><pre><code class=\"bash\">$ sudo yum remove docker \\\n  docker-common \\\n  docker-selinux \\\n  docker-engine\n</code></pre>\n<h4 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h4><pre><code class=\"bash\">$ sudo yum install -y yum-utils \\\n   device-mapper-persistent-data \\\n   lvm2\n</code></pre>\n<h4 id=\"添加yum源\"><a href=\"#添加yum源\" class=\"headerlink\" title=\"添加yum源\"></a>添加yum源</h4><pre><code class=\"bash\">#国内源\n$ sudo yum-config-manager \\\n--add-repo \\\nhttps://mirrors.ustc.edu.cn/docker-ce/linux/centos/docker-ce.repo\n\n# 官方源\n# $ sudo yum-config-manager \\\n# --add-repo \\\n# https://download.docker.com/linux/centos/docker-ce.repo\n</code></pre>\n<h4 id=\"安装Docker-CE\"><a href=\"#安装Docker-CE\" class=\"headerlink\" title=\"安装Docker CE\"></a>安装Docker CE</h4><pre><code class=\"bash\">#安装最新版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-edge\n#安装测试版本的 Docker CE\n$ sudo yum-config-manager --enable docker-ce-test\n#正式安装\n$ sudo yum makecache fast\n$ sudo yum install docker-ce\n</code></pre>\n<h2 id=\"2、脚本自动安装\"><a href=\"#2、脚本自动安装\" class=\"headerlink\" title=\"2、脚本自动安装\"></a>2、脚本自动安装</h2><pre><code class=\"bash\">$ curl -fsSL get.docker.com -o get-docker.sh\n$ sudo sh get-docker.sh --mirror Aliyun\n</code></pre>\n<h2 id=\"3、镜像加速\"><a href=\"#3、镜像加速\" class=\"headerlink\" title=\"3、镜像加速\"></a>3、镜像加速</h2><p>方式有很多，这里使用的是163镜像(这个效果好像没有daocloud加速器好)</p>\n<pre><code class=\"bash\">$ vim /etc/docker/daemon.json\n#添加\n{\n    &quot;registry-mirrors&quot;: [\n        &quot;http://hub-mirror.c.163.com&quot;\n    ]\n}\n#保存重启docker\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n</code></pre>\n<h2 id=\"4、docker-compose-安装\"><a href=\"#4、docker-compose-安装\" class=\"headerlink\" title=\"4、docker-compose 安装\"></a>4、docker-compose 安装</h2><pre><code class=\"bash\">$ sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\n$ sudo chmod +x /usr/local/bin/docker-compose\n</code></pre>\n<p>至此，docker安装工作已经完成，因为最终目的是让虚拟机作为一个工作环境，而代码编写、调试在windows上，所以我们需要虚拟机和windows文件共享，同步更新，这样一个完整的工作流程就ok了<br>接下来，实现虚拟机文件共享</p>\n<h2 id=\"在-Linux-虚拟机中手动安装-VMware-Tools\"><a href=\"#在-Linux-虚拟机中手动安装-VMware-Tools\" class=\"headerlink\" title=\"在 Linux 虚拟机中手动安装 VMware Tools\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-08BB9465-D40A-4E16-9E15-8C016CC8166F.html\" target=\"_blank\" rel=\"noopener\">在 Linux 虚拟机中手动安装 VMware Tools</a></h2><p>在主机上，从 Workstation Pro 菜单栏中选择虚拟机 &gt; 安装 VMware Tools。<br>如果安装了早期版本的 VMware Tools，则菜单项是更新 VMware Tools。</p>\n<pre><code class=\"bash\">#如果未装载 VMware Tools 虚拟 CD-ROM 映像，请装载 CD-ROM 驱动器。\n#如果装载点目录尚不存在，请创建该目录。\n$ mkdir /mnt/cdrom\n#某些 Linux 发行版使用不同的装载点名称。例如，某些发行版上的装载点是 /media/VMware Tools 而不是 #/mnt/cdrom。请修改该命令以反映您的发行版使用的约定。\n\n#装载 CD-ROM 驱动器。\n#某些 Linux 发行版使用不同的设备名称，或者以不同的方式组织 /dev 目录。如果 CD-ROM 驱动器不是 #/dev/cdrom 或 CD-ROM 装载点不是 /mnt/cdrom，则必须修改该命令以反映您的发行版使用的约定。\n$ mount /dev/cdrom /mnt/cdrom\n\n#（可选）在安装 VMware Tools 之前，删除以前的 vmware-tools-distrib 目录。\n#该目录的位置取决于以前安装时的存储位置。通常，该目录位于 /tmp/vmware-tools-distrib。\n#列出挂载点目录的内容，并记下 VMware Tools tar 安装程序的文件名。\n$ ls mount-point\n#解压缩安装程序。\n$ tar zxpf /mnt/cdrom/VMwareTools-x.x.x-yyyy.tar.gz -C /tmp/  #x.x.x 值是产品版本号，yyyy 是产品版本的内部版本号。\n# 如果需要，请卸载 CD-ROM 映像。\n$ umount /dev/cdrom \n#如果 Linux 发行版自动装载 CD-ROM，则不需要卸载该映像。\n\n#运行安装程序并以 root 用户身份配置 VMware Tools。\n$ cd /tmp/vmware-tools-distrib\n$ sudo ./vmware-install.pl\n</code></pre>\n<p>接下来就是根据提示键y/n</p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹\"><a href=\"#在-Linux-客户机中装载共享文件夹\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-D6D9A5FD-7F5F-4C95-AFAB-EDE9335F5562.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><p><img src=\"/images/screenshot.png\" alt=\"\"></p>\n<h2 id=\"在-Linux-客户机中装载共享文件夹-1\"><a href=\"#在-Linux-客户机中装载共享文件夹-1\" class=\"headerlink\" title=\"在 Linux 客户机中装载共享文件夹\"></a><a href=\"https://docs.vmware.com/cn/VMware-Workstation-Pro/14.0/com.vmware.ws.using.doc/GUID-AB5C80FE-9B8A-4899-8186-3DB8201B1758.html\" target=\"_blank\" rel=\"noopener\">在 Linux 客户机中装载共享文件夹</a></h2><pre><code class=\"bash\">#查看当前虚拟机设置共享的文件夹\n$ vmware-hgfsclient  //根据上图配置的共享文件夹，这条命令会显示docker\n$ mount -t vmhgfs .host:/docker /mnt/hgfs  //docker换成你vmware-hgfsclient执行结果\n#如果报错Error: cannot mount filesystem: No such device 执行：\n$ sudo vmhgfs-fuse .host:/docker /mnt/hgfs 即可（有时候这个报错并不影响共享，查看/mnt/hgfs目录已经有了共享文件夹）\n</code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjojepo8j0001pxt8ynnuaulq","category_id":"cjojepo8r0005pxt8rcgbktvz","_id":"cjojepo90000fpxt87nko2fs9"},{"post_id":"cjojepo8o0003pxt8dhxqsw29","category_id":"cjojepo8y000cpxt8yxwfgsyj","_id":"cjojepo91000kpxt85wre18lh"},{"post_id":"cjojepo8t0007pxt845bx617r","category_id":"cjojepo90000gpxt8ub8tboue","_id":"cjojepo92000opxt8js7o98e7"},{"post_id":"cjojepo8v0009pxt8rmrar9rm","category_id":"cjojepo91000lpxt8vh5eeae3","_id":"cjojepo92000rpxt8jruezqpo"},{"post_id":"cjojepo8w000bpxt8mzss1uy7","category_id":"cjojepo92000ppxt8wspo95vs","_id":"cjojepo93000vpxt8uvfoljnj"}],"PostTag":[{"post_id":"cjojepo8j0001pxt8ynnuaulq","tag_id":"cjojepo8s0006pxt8ek748b96","_id":"cjojepo90000ipxt8z6zdrozd"},{"post_id":"cjojepo8j0001pxt8ynnuaulq","tag_id":"cjojepo8y000dpxt8izxutr2d","_id":"cjojepo91000jpxt82txulpr5"},{"post_id":"cjojepo8o0003pxt8dhxqsw29","tag_id":"cjojepo90000hpxt84c0qsrs6","_id":"cjojepo91000npxt85ap6hvrd"},{"post_id":"cjojepo8t0007pxt845bx617r","tag_id":"cjojepo91000mpxt8ehpdyxia","_id":"cjojepo93000tpxt8y365mh09"},{"post_id":"cjojepo8t0007pxt845bx617r","tag_id":"cjojepo92000qpxt8j5fw6fud","_id":"cjojepo93000upxt89ivdyd9d"},{"post_id":"cjojepo8v0009pxt8rmrar9rm","tag_id":"cjojepo92000spxt8aj8nwgd1","_id":"cjojepo93000ypxt80lqx1h0m"},{"post_id":"cjojepo8v0009pxt8rmrar9rm","tag_id":"cjojepo93000wpxt86obcjcbk","_id":"cjojepo93000zpxt8c94wjx9i"},{"post_id":"cjojepo8w000bpxt8mzss1uy7","tag_id":"cjojepo93000xpxt8jjrtve25","_id":"cjojepo940010pxt88z4sub3j"}],"Tag":[{"name":"vue","_id":"cjojepo8s0006pxt8ek748b96"},{"name":"webpack","_id":"cjojepo8y000dpxt8izxutr2d"},{"name":"shell","_id":"cjojepo90000hpxt84c0qsrs6"},{"name":"php","_id":"cjojepo91000mpxt8ehpdyxia"},{"name":"laravel","_id":"cjojepo92000qpxt8j5fw6fud"},{"name":"mysql","_id":"cjojepo92000spxt8aj8nwgd1"},{"name":"主从同步","_id":"cjojepo93000wpxt86obcjcbk"},{"name":"redis","_id":"cjojepo93000xpxt8jjrtve25"}]}}